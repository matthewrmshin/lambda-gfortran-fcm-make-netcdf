name: Docker Image CI

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      TAG: "docker.pkg.github.com/${{github.repository}}/python3.8:latest"

    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag "${TAG}"
    - name: Test Docker image, basic
      run: |
        docker run --rm -v "${PWD}/test:/tmp/myapp" "${TAG}" fcm make
        docker run --rm -v "${PWD}/test:/tmp/myapp" "${TAG}" './build/bin/hello.bin'
    - name: Test Docker image, build with netCDF
      run: |
        curl -L \
          'https://www.unidata.ucar.edu/software/netcdf/examples/programs/simple_xy_wr.f90' \
          -o 'test/src/simple_xy_wr.f90'
        docker run --rm -v "${PWD}/test:/tmp/myapp" "${TAG}" \
          fcm make -f './fcm-make-with-netcdf.cfg'
        docker run --rm -v "${PWD}/test:/tmp/myapp" "${TAG}" \
          './build/bin/simple_xy_wr.bin'
        mkdir -p 'test/lib'
        docker run --rm -v "${PWD}/test/lib:/tmp/test/lib" "${TAG}" \
            find '/var/task/lib' -name '*.so*' -exec cp '{}' '/tmp/test/lib/' ';'
        docker run --rm \
          -v "${PWD}/test:/var/task" \
          'lambci/lambda:python3.8' \
          'index.handler' \
          '{"executable": "/var/task/build/bin/simple_xy_wr.bin"}'
    - name: Push Docker image to GPR
      run: |
        docker login -u "${GITHUB_REPOSITORY%%/*}" --password-stdin 'docker.pkg.github.com' <<<'${{secrets.GITHUB_TOKEN}}'
        docker push "${TAG}"
